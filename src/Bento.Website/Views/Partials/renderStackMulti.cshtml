@inherits  UmbracoViewPage<IEnumerable<Bento.Core.Models.StackItem>>

@foreach (var item in Model)
{

	var settings = item.Settings as Umbraco.Web.PublishedModels.BentoLayoutSettings;


	Guid id = Guid.Empty;
	string classString = null;
	string styleString = null;
	string gridGap = null;


	var classList = new List<string>();
	var styleList = new List<string>();

	if (settings != null)
	{
		id = settings.Key;
		if (!string.IsNullOrEmpty(settings.BottomMargin))
		{
			classList.Add($"mb-{settings.BottomMargin}");
		}

		if (!string.IsNullOrEmpty(settings.TopMargin))
		{
			classList.Add($"mt-{settings.TopMargin}");
		}

		if (!string.IsNullOrEmpty(settings.GutterLeft))
		{
			classList.Add($"gl-{settings.GutterLeft}");
		}

		if (!string.IsNullOrEmpty(settings.GutterRight))
		{
			classList.Add($"gr-{settings.GutterRight}");
		}

		if (!string.IsNullOrEmpty(settings.CSsclass))
		{
			classList.Add(settings.CSsclass);
		}

		if (settings.TextColour != null && !string.IsNullOrEmpty(settings.TextColour.Label))
		{
			classList.Add($"txt-{settings.TextColour.Label}");
		}

		if (settings.BackgroundColour != null && !string.IsNullOrEmpty(settings.BackgroundColour.Label))
		{
			classList.Add($"bkg-{settings.BackgroundColour.Label}");
		}

		if (settings.BackgroundImage != null)
		{
			classList.Add($"bkg-image");
			styleList.Add($"background-image: url('{Url.GetCropUrl(settings.BackgroundImage, "background")}');");
			if (settings.BackgroundOverlay)
			{
				classList.Add($"bkg-overlay");
			}
		}

		if (settings.HasValue("gridGap"))
		{
			gridGap = $"grid-gap-{settings.GridGap}";
		}
	}

	if (classList.Any())
	{
		classString = string.Join(" ", classList);
	}

	if (styleList.Any())
	{
		styleString = string.Join(" ", styleList);
	}

	<section id="s-@id" class="@classString">
		<div class="@item.Alias @gridGap section-inner">
			@Html.Partial($"~/Views/Partials/Bento/layoutsmulti/{item.Alias}.cshtml", item)
		</div>
	</section>

	if (id != Guid.Empty)
	{
		<style>
		#s-@id  {
			@Html.Raw(styleString)
		}

			@if(settings.BackgroundOverlay && settings.BackgroundColour != null && !string.IsNullOrEmpty(settings.BackgroundColour.Label))
			{
				<text>
			.bkg-overlay:before{
					background-color: #@settings.BackgroundColour.Color;
			}

			@@media screen and (max-width: 800px) {
				#s-@id  {
				background-image:unset;
				}
			}
			</text>
			}
		</style>
	}
}
